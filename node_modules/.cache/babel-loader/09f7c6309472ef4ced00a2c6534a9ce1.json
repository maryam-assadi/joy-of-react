{"ast":null,"code":"var _jsxFileName = \"/Users/maryamassadi/joy-of-react/src/components/GuessInput/GuessInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GuessInput(_ref) {\n  _s();\n\n  let {\n    handelSubmissionGuesses,\n    allowed,\n    handelSetAllowed\n  } = _ref;\n  const [unsubmittedGuess, setUnsubmittedGuess] = React.useState(\"\");\n\n  function handelSubmit(event) {\n    if (allowned > 6) {\n      return;\n    }\n\n    let newAllowed = allowned + 1;\n    setAllowed(newAllowed);\n    event.preventDefault();\n    handelSubmissionGuesses(unsubmittedGuess);\n    setUnsubmittedGuess(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handelSubmit,\n    className: \"guess-input-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"guess-input\",\n      children: \"Enter guess:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      minLength: 5,\n      maxLength: 5,\n      pattern: \"[a-zA-Z]{5}\",\n      value: unsubmittedGuess,\n      onChange: event => setUnsubmittedGuess(event.target.value.toUpperCase()),\n      id: \"guess-input\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuessInput, \"mHEHfPV4zNdoOUYycr6g/pe6AVU=\");\n\n_c = GuessInput;\nexport default GuessInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessInput\");","map":{"version":3,"sources":["/Users/maryamassadi/joy-of-react/src/components/GuessInput/GuessInput.js"],"names":["React","GuessInput","handelSubmissionGuesses","allowed","handelSetAllowed","unsubmittedGuess","setUnsubmittedGuess","useState","handelSubmit","event","allowned","newAllowed","setAllowed","preventDefault","target","value","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,OAA2E;AAAA;;AAAA,MAAvD;AAAEC,IAAAA,uBAAF;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA;AAApC,GAAuD;AACzE,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAhD;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIC,QAAQ,GAAG,CAAf,EAAkB;AAChB;AACD;;AACD,QAAIC,UAAU,GAAGD,QAAQ,GAAG,CAA5B;AACAE,IAAAA,UAAU,CAACD,UAAD,CAAV;AACAF,IAAAA,KAAK,CAACI,cAAN;AACAX,IAAAA,uBAAuB,CAACG,gBAAD,CAAvB;AACAC,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD;;AACD,sBACE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAA8B,IAAA,SAAS,EAAC,qBAAxC;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,SAAS,EAAE,CAFb;AAGE,MAAA,SAAS,EAAE,CAHb;AAIE,MAAA,OAAO,EAAC,aAJV;AAKE,MAAA,KAAK,EAAEH,gBALT;AAME,MAAA,QAAQ,EAAGI,KAAD,IACRH,mBAAmB,CAACG,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAD,CAPvB;AASE,MAAA,EAAE,EAAC,aATL;AAUE,MAAA,IAAI,EAAC;AAVP;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9BQf,U;;KAAAA,U;AAgCT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\nfunction GuessInput({ handelSubmissionGuesses ,allowed, handelSetAllowed}) {\n  const [unsubmittedGuess, setUnsubmittedGuess] = React.useState(\"\");\n  \n  function handelSubmit(event) {\n    if (allowned > 6) {\n      return;\n    }\n    let newAllowed = allowned + 1;\n    setAllowed(newAllowed);\n    event.preventDefault();\n    handelSubmissionGuesses(unsubmittedGuess);\n    setUnsubmittedGuess(\"\");\n  }\n  return (\n    <form onSubmit={handelSubmit} className=\"guess-input-wrapper\">\n      <label htmlFor=\"guess-input\">Enter guess:</label>\n      <input\n        required\n        minLength={5}\n        maxLength={5}\n        pattern=\"[a-zA-Z]{5}\"\n        value={unsubmittedGuess}\n        onChange={(event) =>\n          setUnsubmittedGuess(event.target.value.toUpperCase())\n        }\n        id=\"guess-input\"\n        type=\"text\"\n      />\n    </form>\n  );\n}\n\nexport default GuessInput;\n"]},"metadata":{},"sourceType":"module"}